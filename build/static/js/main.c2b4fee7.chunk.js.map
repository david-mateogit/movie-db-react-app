{"version":3,"sources":["config.js","components/elements/Header/Header.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/elements/MovieThumb/MovieThumb.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["API_URL","API_KEY","Header","className","to","src","alt","process","ACCESS_TOKEN_V4","IMAGE_BASE_URL","HeroImage","image","title","text","style","background","SearchBar","searchItems","useState","value","setValue","name","size","onSubmit","e","preventDefault","trim","handleSubmit","type","placeholder","onChange","val","target","autoComplete","required","FourColGrid","children","header","loading","map","element","i","key","LoadMoreBtn","loadMoreItems","role","tabIndex","onClick","onKeyPress","Spinner","MovieThumb","clickable","movieId","movieName","pathname","Home","movies","setMovies","heroImage","setHeroImage","setLoading","currentPage","setCurrentPage","totalPages","setTotalPages","searchTerm","setSearchTerm","fetchItems","endpoint","caller","a","async","fetch","result","json","response","results","page","total_pages","useEffect","backdrop_path","overview","query","length","poster_path","id","original_title","Navigation","movie","MovieInfo","directors","cickable","min","max","optimum","low","high","vote_average","release_date","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","runtime","budget","revenue","time","hours","Math","floor","mins","calcTime","Actor","actor","character","profile_path","Movie","match","location","setMovie","actors","setActors","setDirectors","status_code","movieURL","params","actorResult","movieCrew","movieDirectors","crew","filter","member","job","cast","NotFound","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2b4fee7.chunk.js","sourcesContent":["let API_URL;\nlet API_KEY;\nlet API_ACCESS_TOKEN_V4;\n\nif (process.env.NODE_ENV !== 'production') {\n  API_URL = process.env.REACT_APP_API_URL;\n  API_KEY = process.env.REACT_APP_API_KEY;\n  API_ACCESS_TOKEN_V4 = process.env.REACT_APP_ACCESS_TOKEN_V4;\n} else {\n  API_URL = process.env.API_URL;\n  API_KEY = process.env.API_KEY;\n  API_ACCESS_TOKEN_V4 = process.env.ACCESS_TOKEN_V4;\n}\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\n\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  API_ACCESS_TOKEN_V4,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"rmdb-header\">\n      <div className=\"rmdb-header-content\">\n        <Link to=\"/\">\n          <img\n            className=\"rmdb-logo\"\n            src=\"../../images/reactMovie_logo.png\"\n            alt=\"rmdb-logo\"\n          />\n        </Link>\n        <img\n          className=\"rmdb-tmdb-logo\"\n          src=\"../../images/tmdb_logo.png\"\n          alt=\"tmdb-logo\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => {\n  return (\n    <div\n      className=\"rmdb-heroimage\"\n      style={{\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\n      39%, rgba(0,0,0,0)\n      41%, rgba(0,0,0,65)\n      100%), url(${image}), #1c1c1c`,\n      }}\n    >\n      <div className=\"rmdb-heroimage-content\">\n        <div className=\"rmdb-heroimage-text\">\n          <h1>{title}</h1>\n          <p>{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\nexport default HeroImage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nconst SearchBar = ({ searchItems }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValue(value.trim());\n    if (value.trim() === '') return;\n    searchItems(value);\n  };\n\n  const doSearch = val => {\n    setValue(val);\n  };\n\n  return (\n    <div className=\"rmdb-searchbar\">\n      <div className=\"rmdb-searchbar-content\">\n        <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n        <form\n          onSubmit={e => {\n            return handleSubmit(e);\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            name=\"search\"\n            placeholder=\"Search\"\n            onChange={e => {\n              return doSearch(e.target.value);\n            }}\n            value={value}\n            autoComplete=\"off\"\n            required\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  searchItems: PropTypes.func.isRequired,\n};\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = ({ children, header, loading }) => {\n  const renderElements = () => {\n    const gridElements = children.map((element, i) => {\n      return (\n        <div key={i} className=\"rm\\db-grid-element\">\n          {element}\n        </div>\n      );\n    });\n    return gridElements;\n  };\n  return (\n    <div className=\"rmdb-grid\">\n      {header && !loading ? <h1>{header}</h1> : null}\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\n    </div>\n  );\n};\n\nFourColGrid.propTypes = {\n  children: PropTypes.array.isRequired,\n  header: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\nexport default FourColGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ loadMoreItems, text }) => {\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className=\"rmdb-loadmorebtn\"\n      onClick={loadMoreItems}\n      onKeyPress={loadMoreItems}\n    >\n      <p>{text}</p>\n    </div>\n  );\n};\n\nLoadMoreBtn.propTypes = {\n  loadMoreItems: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\nexport default LoadMoreBtn;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className=\"loader\" />;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ image, clickable, movieId, movieName }) => {\n  return (\n    <div className=\"rmdb-moviethumb\">\n      {clickable ? (\n        <Link to={{ pathname: `/${movieId}`, movieName: `${movieName}` }}>\n          <img src={image} alt=\"moviethumb\" />\n        </Link>\n      ) : (\n        <img src={image} alt=\"moviethumb\" />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string.isRequired,\n  clickable: PropTypes.bool,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string,\n};\nexport default MovieThumb;\n","import React, { useState, useEffect } from 'react';\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [heroImage, setHeroImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const fetchItems = async (endpoint, caller) => {\n    const result = await fetch(endpoint);\n    const response = await result.json();\n\n    if (response.results) {\n      if (caller === 'searchItems') {\n        setMovies([...response.results]);\n        setHeroImage(response.results[0]);\n      } else if (caller === 'loadMore') {\n        setMovies([...movies, ...response.results]);\n        setHeroImage(heroImage || response.results[0]);\n      }\n    }\n\n    setLoading(false);\n    setCurrentPage(response.page);\n    setTotalPages(response.total_pages);\n  };\n\n  const loadMoreItems = () => {\n    let endpoint = '';\n    setLoading(true);\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage +\n        1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage +\n        1}`;\n    }\n    fetchItems(endpoint, 'loadMore');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchItems(endpoint, 'loadMore');\n    // eslint-disable-next-line\n  }, []);\n\n  const searchItems = query => {\n    let endpoint;\n    setLoading(true);\n\n    setSearchTerm(query);\n    if (query.length === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`;\n    }\n\n    fetchItems(endpoint, 'searchItems');\n  };\n\n  return (\n    <div className=\"rmdb-home\">\n      <div>\n        {heroImage && (\n          <HeroImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n            title={heroImage.title}\n            text={heroImage.overview}\n          />\n        )}\n        <SearchBar searchItems={searchItems} />\n      </div>\n      <div className=\"rmdb-home-grid\">\n        <FourColGrid\n          header={searchTerm ? 'Search Result' : 'Popular Movies'}\n          loading={loading}\n        >\n          {movies.map((element, i) => {\n            return (\n              <MovieThumb\n                key={i}\n                clickable\n                image={\n                  element.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\n                    : './images/no_image.jpg'\n                }\n                movieId={element.id}\n                movieName={element.original_title}\n              />\n            );\n          })}\n        </FourColGrid>\n        {loading ? <Spinner /> : null}\n        {currentPage < totalPages && !loading ? (\n          <LoadMoreBtn loadMoreItems={loadMoreItems} text=\"Load More\" />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nconst Navigation = ({ movie }) => {\n  return (\n    <div className=\"rmdb-navigation\">\n      <div className=\"rmdb-navigation-content\">\n        <Link to=\"/\">\n          <p>Home</p>\n        </Link>\n        <p>/</p>\n        <p>{movie}</p>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  movie: PropTypes.string.isRequired,\n};\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ movie, directors }) => {\n  return (\n    <>\n      {movie && (\n        <div\n          className=\"rmdb-movieinfo\"\n          style={{\n            background: movie.backdrop_path\n              ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path})`\n              : '#000',\n          }}\n        >\n          <div className=\"rmdb-movieinfo-content\">\n            <div className=\"rmdb-movieinfo-thumb\">\n              <MovieThumb\n                image={\n                  movie.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                    : './images/no_image.jpg'\n                }\n                cickable={false}\n              />\n            </div>\n            <div className=\"rmdb-movieinfo-text\">\n              <h1>{movie.title}</h1>\n              <h3>PLOT</h3>\n              <p>{movie.overview}</p>\n              <h3>IMDB RATING</h3>\n              <div className=\"rmdb-rating\">\n                <meter\n                  min=\"0\"\n                  max=\"100\"\n                  optimum=\"100\"\n                  low=\"40\"\n                  high=\"70\"\n                  value={movie.vote_average * 10}\n                />\n                <p className=\"rmdb-score\">{movie.vote_average}</p>\n              </div>\n              {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n              {directors.map((element, i) => {\n                return (\n                  <p key={i} className=\"rmdb-director\">\n                    {element.name}\n                  </p>\n                );\n              })}\n              <div className=\"rmdb-release-date\">\n                <p>Release Date: {movie.release_date}</p>\n              </div>\n            </div>\n            <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n  directors: PropTypes.array.isRequired,\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './MovieInfoBar.css';\n\nconst MovieInfoBar = ({ movie: { runtime, budget, revenue } }) => {\n  return (\n    <div className=\"rmdb-movieinfobar\">\n      <div className=\"rmdb-movieinfobar-content\">\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome\n            className=\"fa-time rmdb-movieinfobar-icon\"\n            name=\"clock-o\"\n            size=\"2x\"\n          />\n          <span className=\"rmdb-movieinfobar-info\">\n            Running time: {calcTime(runtime)}\n          </span>\n        </div>\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome\n            className=\"fa-budget rmdb-movieinfobar-icon\"\n            name=\"money\"\n            size=\"2x\"\n          />\n          <span className=\"rmdb-movieinfobar-info\">\n            Budget: {convertMoney(budget)}\n          </span>\n        </div>\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome\n            className=\"fa-revenue rmdb-movieinfobar-icon\"\n            name=\"ticket\"\n            size=\"2x\"\n          />\n          <span className=\"rmdb-movieinfobar-info\">\n            Revenue: {convertMoney(revenue)}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieInfoBar.propTypes = {\n  movie: PropTypes.shape({\n    runtime: PropTypes.number.isRequired,\n    budget: PropTypes.number.isRequired,\n    revenue: PropTypes.number.isRequired,\n  }).isRequired,\n};\nexport default MovieInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IMAGE_BASE_URL } from '../../../config';\nimport './Actor.css';\n\nconst Actor = ({ actor: { name, character, profile_path } }) => {\n  const POSTER_SIZE = 'w154';\n\n  return (\n    <div className=\"rmdb-actor\">\n      <img\n        src={\n          profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${profile_path}`\n            : './images/no_image.jpg'\n        }\n        alt={name}\n      />\n      <span className=\"rmdb-actor-name\">{name}</span>\n      <span className=\"rmdb-actor-character\">{character}</span>\n    </div>\n  );\n};\n\nActor.propTypes = {\n  actor: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n  }).isRequired,\n};\nexport default Actor;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nconst Movie = ({ match, location }) => {\n  const [movie, setMovie] = useState(null);\n  const [actors, setActors] = useState(null);\n  const [directors, setDirectors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchItems = async endpoint => {\n    const result = await fetch(endpoint);\n    const response = await result.json();\n    if (response.status_code) {\n      setLoading(false);\n    } else {\n      setMovie(response);\n      const movieURL = `${API_URL}movie/${match.params.movieId}/credits?api_key=${API_KEY}`;\n      const actorResult = await fetch(movieURL);\n      const movieCrew = await actorResult.json();\n      const movieDirectors = movieCrew.crew.filter(member => {\n        return member.job === 'Director';\n      });\n      setActors(movieCrew.cast);\n      setDirectors(movieDirectors);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const endpoint = `${API_URL}movie/${match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    fetchItems(endpoint);\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div className=\"rmdb-movie\">\n      {movie && (\n        <>\n          <Navigation movie={location.movieName || movie.title} />\n          <MovieInfo movie={movie} directors={directors} actors={actors} />\n          <MovieInfoBar movie={movie} />\n        </>\n      )}\n      {actors && (\n        <div className=\"rmdb-movie-grid\">\n          <FourColGrid header=\"Actors\" loading={loading}>\n            {actors.map((element, i) => {\n              return <Actor key={i} actor={element} />;\n            })}\n          </FourColGrid>\n        </div>\n      )}\n      <div className=\"rmdb-not-found\">\n        {!actors && !loading ? <h1>No Movie Found!</h1> : null}\n      </div>\n      {loading ? <Spinner /> : null}\n    </div>\n  );\n};\n\nMovie.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\nexport default Movie;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Not Found!</h1>\n      <p>Sorry the page you requested was not found.</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport Home from '../Home/Home';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../elements/NotFound/NotFound';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/:movieId\" component={Movie} />\n          <Route component={NotFound} />\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}